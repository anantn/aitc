# HG changeset patch
# Parent a66eb64c652fca0d15947636acfe600f6597a6ec

diff -r a66eb64c652f services/aitc/tests/unit/head_helpers.js
--- a/services/aitc/tests/unit/head_helpers.js	Thu May 31 15:44:50 2012 -0700
+++ b/services/aitc/tests/unit/head_helpers.js	Thu May 31 17:59:35 2012 -0700
@@ -1,6 +1,10 @@
 /* Any copyright is dedicated to the Public Domain.
  * http://creativecommons.org/publicdomain/zero/1.0/ */
- 
+
+Cu.import("resource://testing-common/httpd.js");
+Cu.import("resource://services-common/log4moz.js");
+Cu.import("resource://services-common/utils.js");
+
 function httpd_setup (handlers, port) {
   let port   = port || 8080;
   let server = new nsHttpServer();
diff -r a66eb64c652f services/aitc/tests/unit/test_mock_server.js
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/services/aitc/tests/unit/test_mock_server.js	Thu May 31 17:59:35 2012 -0700
@@ -0,0 +1,162 @@
+/* Any copyright is dedicated to the Public Domain.
+   http://creativecommons.org/publicdomain/zero/1.0/ */
+
+"use strict";
+
+Cu.import("resource://services-common/rest.js");
+Cu.import("resource://services-common/utils.js");
+Cu.import("resource://testing-common/services-common/aitcserver.js");
+Cu.import("resource://services-common/preferences.js");
+Cu.import("resource://services-aitc/client.js");
+
+const PREFS = new Preferences("services.aitc.")
+
+function run_test() {
+  initTestLogging("Trace");
+  run_next_test();
+}
+
+function get_aitc_server() {
+  _("Create new server.");
+
+  let server = new AITCServer10Server();
+  server.start(get_server_port());
+
+  return server;
+}
+
+function get_server_with_user(username) {
+  _("Create server user for User " + username);
+
+  let server = get_aitc_server();
+  server.createUser(username);
+
+  return server;
+}
+
+function get_mock_app(remote) {
+
+  var app = {
+    name: "Mocking Birds",
+    origin: "http://example.com",
+    installOrigin: "http://example.com",
+    installedAt: Date.now(),
+    modifiedAt: Date.now(),
+    receipts: []
+  };
+
+  app[(remote ? 'manifestPath' : 'manifestURL')] = "/manifest.webapp";
+
+  return app;
+
+}
+
+function get_client_for_server(username, server) {
+  _("Create server user for User " + username);
+
+  let token = {
+    endpoint: server.url + username,
+    id: 'ID-HERE',
+    key: 'KEY-HERE'
+  };
+
+  let client = new AitcClient(token, PREFS);
+
+  return client;
+}
+
+add_test(function test_getapps_empty() {
+  _("Ensure client request for empty user has appropriate content.");
+
+  const username = "123";
+
+  let server = get_server_with_user(username);
+  let client = get_client_for_server(username, server);
+
+  client.getApps(function(error, apps) {
+    _("Got response");
+    do_check_eq(error, null);
+
+    do_check_true(Array.isArray(apps));
+    do_check_eq(apps.length, 0);
+
+    server.stop(run_next_test);
+  });
+
+});
+
+
+add_test(function test_install_app() {
+  _("Ensure client request for installing an app has appropriate content.");
+
+  const username = "123";
+  const app = get_mock_app();
+
+  let server = get_server_with_user(username);
+
+  let client = get_client_for_server(username, server);
+
+  _("Installing " + JSON.stringify(app));
+
+  client.remoteInstall(app, function(error, status) {
+    _("Got response");
+    do_check_eq(error, null);
+
+    do_check_true(status);
+
+
+    client.getApps(function(error, apps) {
+      _("Got response");
+      do_check_eq(error, null);
+
+      do_check_true(Array.isArray(apps));
+      do_check_eq(apps.length, 1);
+
+      let first = apps[0];
+
+      do_check_eq(first.origin, app.origin);
+
+      server.stop(run_next_test);
+    });
+
+  });
+
+
+});
+
+add_test(function test_uninstall_app() {
+  _("Ensure client request for un-installing an app has appropriate content.");
+
+  const username = "123";
+  const app = get_mock_app();
+
+  let server = get_server_with_user(username);
+  server.users[username].addApp(get_mock_app(true));
+
+  let client = get_client_for_server(username, server);
+
+  client.remoteUninstall(app, function(error, status) {
+    _("Got response");
+    do_check_eq(error, null);
+
+    do_check_true(status);
+
+    client.getApps(function(error, apps) {
+      _("Got response");
+      do_check_eq(error, null);
+
+      do_check_true(Array.isArray(apps));
+      do_check_eq(apps.length, 1);
+
+      let first = apps[0];
+
+      do_check_eq(first.origin, app.origin);
+      do_check_true(first.deleted);
+
+      server.stop(run_next_test);
+    });
+
+  });
+
+});
+
diff -r a66eb64c652f services/aitc/tests/unit/xpcshell.ini
--- a/services/aitc/tests/unit/xpcshell.ini	Thu May 31 15:44:50 2012 -0700
+++ b/services/aitc/tests/unit/xpcshell.ini	Thu May 31 17:59:35 2012 -0700
@@ -1,7 +1,8 @@
 [DEFAULT]
-head = ../../../common/tests/unit/head_global.js head_helpers.js
+head = ../../../common/tests/unit/head_global.js ../../../common/tests/unit/head_helpers.js head_helpers.js
 tail =
 
 [test_load_modules.js]
 [test_storage_queue.js]
-[test_storage_registry.js]
\ No newline at end of file
+[test_storage_registry.js]
+[test_mock_server.js]
\ No newline at end of file
